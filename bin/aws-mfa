#!/usr/bin/env python3

import configparser
import os
import sys
import boto3
import inquirer


def get_mfa_serials():
    client = boto3.client('iam')
    devices = client.list_mfa_devices()['MFADevices']
    return [device['SerialNumber'] for device in devices]


def choose_mfa_serial():
    serials = get_mfa_serials()
    num_serials = len(serials)

    if (num_serials == 0):
        sys.exit('No MFA devices have been set up.')
    elif (num_serials == 1):
        return serials[0]
    else:
        return inquirer.list_input("Select MFA device", choices=serials)


def get_mfa_serial():
    return os.getenv('AWS_MFA_DEVICE_SERIAL', choose_mfa_serial())


def get_credentials():
    client = boto3.client('sts')

    serial = get_mfa_serial()
    code = input("MFA code: ")

    response = client.get_session_token(
        DurationSeconds=3600,
        SerialNumber=serial,
        TokenCode=code,
    )
    return response['Credentials']


def create_mfa_config():
    credentials = get_credentials()
    return {
        'aws_access_key_id': credentials['AccessKeyId'],
        'aws_secret_access_key': credentials['SecretAccessKey'],
        'aws_session_token': credentials['SessionToken'],
    }


def save_mfa_profile():
    config_path = '/root/.aws/credentials'
    config = configparser.ConfigParser()
    config.read(config_path)

    aws_profile = os.environ.get('AWS_PROFILE', 'mfa')
    if (not config.has_section(aws_profile)):
        config.add_section(aws_profile)

    mfa_config = create_mfa_config()
    config[aws_profile].update(mfa_config)

    with open(config_path, 'w') as config_file:
        config.write(config_file)


if __name__ == '__main__':
    save_mfa_profile()
